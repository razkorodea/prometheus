component rsynchro is
  port (
    Clk : in STD_LOGIC;
    MICRO_int : in STD_LOGIC_VECTOR ( 0 to 0 );
    fifo_empty : in STD_LOGIC_VECTOR ( 3 downto 0 );
    mb_debug_sys_rst : in STD_LOGIC;
    reset_rtl : in STD_LOGIC;
    BRAM_PORTA_addr : in STD_LOGIC_VECTOR ( 31 downto 0 );
    BRAM_PORTA_clk : in STD_LOGIC;
    BRAM_PORTA_din : in STD_LOGIC_VECTOR ( 31 downto 0 );
    BRAM_PORTA_dout : out STD_LOGIC_VECTOR ( 31 downto 0 );
    BRAM_PORTA_en : in STD_LOGIC;
    BRAM_PORTA_rst : in STD_LOGIC;
    BRAM_PORTA_we : in STD_LOGIC_VECTOR ( 3 downto 0 );
    DEBUG_capture : in STD_LOGIC;
    DEBUG_clk : in STD_LOGIC;
    DEBUG_disable : in STD_LOGIC;
    DEBUG_reg_en : in STD_LOGIC_VECTOR ( 0 to 7 );
    DEBUG_rst : in STD_LOGIC;
    DEBUG_shift : in STD_LOGIC;
    DEBUG_tdi : in STD_LOGIC;
    DEBUG_tdo : out STD_LOGIC;
    DEBUG_update : in STD_LOGIC;
    M_AHB_RTL_haddr : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AHB_RTL_hburst : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AHB_RTL_hmastlock : out STD_LOGIC;
    M_AHB_RTL_hprot : out STD_LOGIC_VECTOR ( 3 downto 0 );
    M_AHB_RTL_hrdata : in STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AHB_RTL_hready : in STD_LOGIC;
    M_AHB_RTL_hresp : in STD_LOGIC;
    M_AHB_RTL_hsize : out STD_LOGIC_VECTOR ( 2 downto 0 );
    M_AHB_RTL_htrans : out STD_LOGIC_VECTOR ( 1 downto 0 );
    M_AHB_RTL_hwdata : out STD_LOGIC_VECTOR ( 31 downto 0 );
    M_AHB_RTL_hwrite : out STD_LOGIC
  );